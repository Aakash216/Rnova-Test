{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport UserNavbar from \"../core/userNavbar\";\nimport PieChart, { Series, Label, Connector, Size, Export } from 'devextreme-react/pie-chart';\nimport { Chart, SeriesTemplate, CommonSeriesSettings, Title } from 'devextreme-react/chart';\nimport { getGraphData } from './helper/data';\n/*function userchart()  {\n    this.pointClickHandler = this.pointClickHandler.bind(this);\n    this.legendClickHandler = this.legendClickHandler.bind(this)\n\n    return (\n      <div className=\"row\">\n         <div className=\"col-lg-12 col-md-12 col-sm-12\">\n      <UserNavbar/>\n        <div className = \"row\">\n            <div className= \"col-lg-6 col-md-6 col-sm-6 mt-5\">\n       <PieChart\n        id=\"\" style={{width:\"300px\", height: \"300px\"}}\n        dataSource={Loss}\n        palette=\"Material\"\n        title=\"Loss\"\n\n        onPointClick={this.pointClickHandler}\n        onLegendClick={this.legendClickHandler}\n      >\n        <Series\n          argumentField=\"country\"\n          valueField=\"area\"\n        >\n          <Label visible={false}>\n            <Connector visible={false} width={1} />\n          </Label>\n        </Series>\n\n        <Size width={500} />\n        <Export enabled={false} />\n      </PieChart>\n      </div>\n       <div className=\"col-lg-6 col-md-6 col-sm-6 mt-5\">\n<Chart\nid=\"chart\" style={{width:\"500px\", height: \"300px\",}}\ntitle=\"Growth\"\npalette=\"Material\"\nPalette Extension Mode=\"Alternate\"\ndataSource={Growth}>\n<CommonSeriesSettings\n  argumentField=\"number\"\n  valueField=\"age\"\n  type=\"bar\"\n  ignoreEmptyPoints={true}\n/>\n<SeriesTemplate nameField=\"age\" />\n<Title\n  \n/>\n</Chart>\n</div>\n</div>\n</div>\n</div>\n    );\n  }\n\n  pointClickHandler(e) {\n    this.toggleVisibility(e.target);\n  }\n\n  legendClickHandler(e) {\n    let arg = e.target;\n    let item = e.component.getAllSeries()[0].getPointsByArg(arg)[0];\n\n    this.toggleVisibility(item);\n  }\n\n  toggleVisibility(item) {\n    item.isVisible() ? item.hide() : item.show();\n  }\n\n\nexport default userchart;*/\n\nconst userchart = () => {\n  _s();\n\n  const [graph, setGraph] = useState();\n  useEffect(() => {\n    fetch(`${API}/getGraphData`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(response.date);\n    });\n  }, []);\n  return {};\n};\n\n_s(userchart, \"8jJ0lsphP1F/qKWPM1abQCq7tcQ=\");\n\nexport default userchart;","map":{"version":3,"sources":["C:/Users/Aakash/OneDrive/Desktop/LoginProject/LoginProject/LoginFronted/src/user/userchart.js"],"names":["React","useEffect","useState","UserNavbar","PieChart","Series","Label","Connector","Size","Export","Chart","SeriesTemplate","CommonSeriesSettings","Title","getGraphData","userchart","graph","setGraph","fetch","API","method","headers","Accept","then","response","console","log","date"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,OAAOC,QAAP,IACEC,MADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,IAJF,EAKEC,MALF,QAMO,4BANP;AAQA,SAASC,KAAT,EAAgBC,cAAhB,EAAgCC,oBAAhC,EAAsDC,KAAtD,QAAkE,wBAAlE;AAEA,SAASC,YAAT,QAA6B,eAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAI;AAAA;;AAEpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK,CAAE,GAAEC,GAAI,eAAR,EAAwB;AAC3BC,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAFkB,KAAxB,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAI;AAEhBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,KAVH;AAWD,GAZQ,EAYP,EAZO,CAAT;AAeA,SAAM,EAAN;AAEE,CArBJ;;GAAMZ,S;;AAuBJ,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport UserNavbar from \"../core/userNavbar\"\n\nimport PieChart, {\n  Series,\n  Label,\n  Connector,\n  Size,\n  Export\n} from 'devextreme-react/pie-chart';\n\nimport { Chart, SeriesTemplate, CommonSeriesSettings, Title} from 'devextreme-react/chart';\n\nimport { getGraphData } from './helper/data';\n\n/*function userchart()  {\n    this.pointClickHandler = this.pointClickHandler.bind(this);\n    this.legendClickHandler = this.legendClickHandler.bind(this)\n\n    return (\n      <div className=\"row\">\n         <div className=\"col-lg-12 col-md-12 col-sm-12\">\n      <UserNavbar/>\n        <div className = \"row\">\n            <div className= \"col-lg-6 col-md-6 col-sm-6 mt-5\">\n       <PieChart\n        id=\"\" style={{width:\"300px\", height: \"300px\"}}\n        dataSource={Loss}\n        palette=\"Material\"\n        title=\"Loss\"\n\n        onPointClick={this.pointClickHandler}\n        onLegendClick={this.legendClickHandler}\n      >\n        <Series\n          argumentField=\"country\"\n          valueField=\"area\"\n        >\n          <Label visible={false}>\n            <Connector visible={false} width={1} />\n          </Label>\n        </Series>\n\n        <Size width={500} />\n        <Export enabled={false} />\n      </PieChart>\n      </div>\n       <div className=\"col-lg-6 col-md-6 col-sm-6 mt-5\">\n<Chart\nid=\"chart\" style={{width:\"500px\", height: \"300px\",}}\ntitle=\"Growth\"\npalette=\"Material\"\nPalette Extension Mode=\"Alternate\"\ndataSource={Growth}>\n<CommonSeriesSettings\n  argumentField=\"number\"\n  valueField=\"age\"\n  type=\"bar\"\n  ignoreEmptyPoints={true}\n/>\n<SeriesTemplate nameField=\"age\" />\n<Title\n  \n/>\n</Chart>\n</div>\n</div>\n</div>\n</div>\n    );\n  }\n\n  pointClickHandler(e) {\n    this.toggleVisibility(e.target);\n  }\n\n  legendClickHandler(e) {\n    let arg = e.target;\n    let item = e.component.getAllSeries()[0].getPointsByArg(arg)[0];\n\n    this.toggleVisibility(item);\n  }\n\n  toggleVisibility(item) {\n    item.isVisible() ? item.hide() : item.show();\n  }\n\n\nexport default userchart;*/\n\nconst userchart = ()=>{\n\n  const [graph, setGraph] = useState();\n \n  useEffect(() => {\n    fetch(`${API}/getGraphData`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(response => {\n     \n        console.log(response.date)\n      })\n  },[]);\n\n\n  return{\n  \n  }}\n\n  export default userchart;"]},"metadata":{},"sourceType":"module"}