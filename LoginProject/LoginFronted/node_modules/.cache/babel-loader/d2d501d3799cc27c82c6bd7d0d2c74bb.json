{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aakash\\\\OneDrive\\\\Desktop\\\\LoginProject\\\\LoginProject\\\\LoginFronted\\\\src\\\\user\\\\userchart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport UserNavbar from \"../core/userNavbar\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n/*function userchart()  {\n    this.pointClickHandler = this.pointClickHandler.bind(this);\n    this.legendClickHandler = this.legendClickHandler.bind(this)\n\n    return (\n      <div className=\"row\">\n         <div className=\"col-lg-12 col-md-12 col-sm-12\">\n      <UserNavbar/>\n        <div className = \"row\">\n            <div className= \"col-lg-6 col-md-6 col-sm-6 mt-5\">\n       <PieChart\n        id=\"\" style={{width:\"300px\", height: \"300px\"}}\n        dataSource={Loss}\n        palette=\"Material\"\n        title=\"Loss\"\n\n        onPointClick={this.pointClickHandler}\n        onLegendClick={this.legendClickHandler}\n      >\n        <Series\n          argumentField=\"country\"\n          valueField=\"area\"\n        >\n          <Label visible={false}>\n            <Connector visible={false} width={1} />\n          </Label>\n        </Series>\n\n        <Size width={500} />\n        <Export enabled={false} />\n      </PieChart>\n      </div>\n       <div className=\"col-lg-6 col-md-6 col-sm-6 mt-5\">\n<Chart\nid=\"chart\" style={{width:\"500px\", height: \"300px\",}}\ntitle=\"Growth\"\npalette=\"Material\"\nPalette Extension Mode=\"Alternate\"\ndataSource={Growth}>\n<CommonSeriesSettings\n  argumentField=\"number\"\n  valueField=\"age\"\n  type=\"bar\"\n  ignoreEmptyPoints={true}\n/>\n<SeriesTemplate nameField=\"age\" />\n<Title\n  \n/>\n</Chart>\n</div>\n</div>\n</div>\n</div>\n    );\n  }\n\n  pointClickHandler(e) {\n    this.toggleVisibility(e.target);\n  }\n\n  legendClickHandler(e) {\n    let arg = e.target;\n    let item = e.component.getAllSeries()[0].getPointsByArg(arg)[0];\n\n    this.toggleVisibility(item);\n  }\n\n  toggleVisibility(item) {\n    item.isVisible() ? item.hide() : item.show();\n  }\n\n\nexport default userchart;*/\n\nconst Userchart = () => {\n  _s();\n\n  const [label, setLabel] = useState();\n  const [data, setData] = useState();\n  const [graph, setGraph] = useState();\n  console.log(graph);\n  const pieData = {\n    maintainAspectRatio: false,\n    responsive: false,\n    labels: label && label,\n    datasets: [{\n      data: data && data,\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)']\n    }]\n  };\n  useEffect(() => {\n    if (localStorage.getItem(\"jwt\")) {\n      let userJwt = JSON.parse(localStorage.getItem(\"jwt\"));\n      let userId = userJwt.user._id;\n      axios(`${process.env.REACT_APP_BACKEND}/getGraphData?userId=${userId}`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        let dataArr = [];\n        let arr = [];\n        response.data.graphData.growth.forEach(val => {\n          dataArr.push(val.number);\n          arr.push(val.country);\n        });\n        setLabel(arr);\n        setData(dataArr);\n        console.log(arr);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '300px',\n        width: '300px',\n        marginLeft: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: pieData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '300px',\n        width: '300px',\n        marginRight: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: pieData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Userchart, \"lUt0DXOihyh0O4yvBeORioe9Xf0=\");\n\n_c = Userchart;\nexport default Userchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userchart\");","map":{"version":3,"sources":["C:/Users/Aakash/OneDrive/Desktop/LoginProject/LoginProject/LoginFronted/src/user/userchart.js"],"names":["React","useEffect","useState","UserNavbar","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","Pie","register","Userchart","label","setLabel","data","setData","graph","setGraph","console","log","pieData","maintainAspectRatio","responsive","labels","datasets","backgroundColor","localStorage","getItem","userJwt","JSON","parse","userId","user","_id","process","env","REACT_APP_BACKEND","method","headers","Accept","then","response","dataArr","arr","graphData","growth","forEach","val","push","number","country","height","width","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport UserNavbar from \"../core/userNavbar\";\nimport axios from \"axios\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar, Pie } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n\n\n\n\n/*function userchart()  {\n    this.pointClickHandler = this.pointClickHandler.bind(this);\n    this.legendClickHandler = this.legendClickHandler.bind(this)\n\n    return (\n      <div className=\"row\">\n         <div className=\"col-lg-12 col-md-12 col-sm-12\">\n      <UserNavbar/>\n        <div className = \"row\">\n            <div className= \"col-lg-6 col-md-6 col-sm-6 mt-5\">\n       <PieChart\n        id=\"\" style={{width:\"300px\", height: \"300px\"}}\n        dataSource={Loss}\n        palette=\"Material\"\n        title=\"Loss\"\n\n        onPointClick={this.pointClickHandler}\n        onLegendClick={this.legendClickHandler}\n      >\n        <Series\n          argumentField=\"country\"\n          valueField=\"area\"\n        >\n          <Label visible={false}>\n            <Connector visible={false} width={1} />\n          </Label>\n        </Series>\n\n        <Size width={500} />\n        <Export enabled={false} />\n      </PieChart>\n      </div>\n       <div className=\"col-lg-6 col-md-6 col-sm-6 mt-5\">\n<Chart\nid=\"chart\" style={{width:\"500px\", height: \"300px\",}}\ntitle=\"Growth\"\npalette=\"Material\"\nPalette Extension Mode=\"Alternate\"\ndataSource={Growth}>\n<CommonSeriesSettings\n  argumentField=\"number\"\n  valueField=\"age\"\n  type=\"bar\"\n  ignoreEmptyPoints={true}\n/>\n<SeriesTemplate nameField=\"age\" />\n<Title\n  \n/>\n</Chart>\n</div>\n</div>\n</div>\n</div>\n    );\n  }\n\n  pointClickHandler(e) {\n    this.toggleVisibility(e.target);\n  }\n\n  legendClickHandler(e) {\n    let arg = e.target;\n    let item = e.component.getAllSeries()[0].getPointsByArg(arg)[0];\n\n    this.toggleVisibility(item);\n  }\n\n  toggleVisibility(item) {\n    item.isVisible() ? item.hide() : item.show();\n  }\n\n\nexport default userchart;*/\n\nconst Userchart = ()=> {\n  const [label,setLabel] =useState();\n  const [data,setData] = useState();\n  \n  const [graph, setGraph] = useState();\n console.log(graph);\n\n const pieData = {\n  maintainAspectRatio: false,\n  responsive: false,\n  labels: label&&label,\n  datasets: [\n    {\n      data: data&&data,\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n    }\n  ]\n};\n\n  useEffect(() => {\n    if(localStorage.getItem(\"jwt\")){\n    let userJwt = JSON.parse(localStorage.getItem(\"jwt\"));\n    let userId = userJwt.user._id\n    axios(`${process.env.REACT_APP_BACKEND}/getGraphData?userId=${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(response => {\n    let dataArr = [];\n     let arr = [];\n     response.data.graphData.growth.forEach(val => {\n      dataArr.push(val.number)\n      arr.push(val.country)\n     })\n     setLabel(arr)\n     setData(dataArr)\n     console.log(arr)\n      })\n    }\n  },[]);\n\n  \n  return (\n  <div>\n    <div style={{ height:'300px',width:'300px',marginLeft:'auto' }}>\n      <Pie\n            data={pieData}\n          />\n          </div>\n \n <div style={{ height:'300px',width:'300px',marginRight:'auto' }}>\n   <Bar \n       data={pieData}\n   />\n </div>\n  </div>\n\n  )\n  \n  }\n\n  export default Userchart;"]},"metadata":{},"sourceType":"module"}